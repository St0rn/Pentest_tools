#!/usr/bin/env python
#
#Author: St0rn
#Website: http://storn.anbu-pentest.com and http://anbu-pentest.com
#
#Script used to scan and discover all Local IPs allowed by IP Filtrage
#
#Usage: python filtredscan.py device target port_used_by_target
#

import commands
import sys
import os
from scapy.all import *
 
ip_list=list()
ip=str()
 
def clear():
 os.system("clear")
 
def ip_truncation(ip_addr):
  count=0
  trunc=str()
  for i in ip_addr:
   if count < 3:
    trunc+=i
    if i == ".":
     count+=1
     if count == 3:
      break
  return trunc
 
 
def generate_ips_list(device):
  ip = commands.getoutput(str('ifconfig ' +device+ ' | grep "inet addr:" | cut -d: -f2 | cut -d" " -f1'))
  for i in xrange(1,255):
   ip_list.append(ip_truncation(ip)+str(i))
 
def get_filtred_ip(target,ips_list):
 print "Allowed IP Discovering started:\n"
 for ip in ips_list:
  packet = IP(src=ip, dst=target)/TCP(flags="S",dport=int(sys.argv[3]))
  rep,norep = sr(packet, verbose=0, timeout=1)
  if rep:
   print "%s is allowed to %s on port %s\n" %(ip, target, sys.argv[3])
 print "\nScan Ended\n"
 
 
if len(sys.argv) == 4:
 try:
  clear()
  generate_ips_list(sys.argv[1])
  get_filtred_ip(sys.argv[2],ip_list)
 
 except KeyboardInterrupt:
  print "\nInterupt! Bye!"
  sys.exit(0)
else:
 clear()
 print "Usage: %s [device] [target] [port used by target]\n" %(sys.argv[0])
